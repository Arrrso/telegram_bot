import os
import random
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
TOKEN = os.environ.get('TOKEN')  # –¢–æ–∫–µ–Ω –±–µ—Ä–µ—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

# –°–ø–∏—Å–∫–∏ –¥–∞–Ω–Ω—ã—Ö
RAILWAY_STATIONS = {
    "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π": ["–û–¥–∏–Ω—Ü–æ–≤–æ", "–ö—É–±–∏–Ω–∫–∞", "–ó–≤–µ–Ω–∏–≥–æ—Ä–æ–¥", "–¢—Ä–µ—Ö–≥–æ—Ä–∫–∞", "–ì–æ–ª–∏—Ü—ã–Ω–æ", "–¢—É—á–∫–æ–≤–æ", "–ú–æ–∂–∞–π—Å–∫", "–°–µ—Ç—É–Ω—å"],
    "–ö–∞–∑–∞–Ω—Å–∫–∏–π": ["–ì–æ–ª—É—Ç–≤–∏–Ω", "–õ—é–±–µ—Ä—Ü—ã", "–†–∞–º–µ–Ω—Å–∫–æ–µ", "–®–∞—Ç—É—Ä–∞"],
    "–ö–∏–µ–≤—Å–∫–∏–π": ["–ü–µ—Ä–µ–¥–µ–ª–∫–∏–Ω–æ", "–û—á–∞–∫–æ–≤–æ", "–ù–∞—Ä–∞", "–ë–∞–ª–∞–±–∞–Ω–æ–≤–æ", "–û–±–Ω–∏–Ω—Å–∫", "–õ–µ—Å–Ω–æ–π –≥–æ—Ä–æ–¥–æ–∫", "–ú–∞–ª–æ—è—Ä–æ—Å–ª–∞–≤–µ—Ü"],
    "–ö—É—Ä—Å–∫–∏–π": ["–ü–æ–¥–æ–ª—å—Å–∫", "–©–µ—Ä–±–∏–Ω–∫–∞", "–ß–µ—Ö–æ–≤", "–°–µ—Ä–ø—É—Ö–æ–≤", "–¢—É–ª–∞"],
    "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π": ["–ö—Ä—é–∫–æ–≤–æ", "–•–∏–º–∫–∏", "–ö–ª–∏–Ω", "–°—Ö–æ–¥–Ω—è", "–ü–æ–¥—Å–æ–ª–Ω–µ—á–Ω–∞—è", "–•–æ–≤—Ä–∏–Ω–æ"],
    "–ü–∞–≤–µ–ª–µ—Ü–∫–∏–π": ["–°—Ç—É–ø–∏–Ω–æ", "–ë–∏—Ä—é–ª–µ–≤–æ", "–†–∞—Å—Ç–æ—Ä–≥—É–µ–≤–æ", "–ö–∞—à–∏—Ä–∞", "–£–∑—É–Ω–æ–≤–æ", "–ë–∞—Ä—ã–±–∏–Ω–æ"],
    "–†–∏–∂—Å–∫–∏–π": ["–í–æ–ª–æ–∫–æ–ª–∞–º—Å–∫", "–ù–∞—Ö–∞–±–∏–Ω–æ", "–ò—Å—Ç—Ä–∞", "–ù–æ–≤–æ–∏–µ—Ä—É—Å–∞–ª–∏–º—Å–∫–∞—è", "–†—É–º—è–Ω—Ü–µ–≤–æ"],
    "–°–∞–≤–µ–ª–æ–≤—Å–∫–∏–π": ["–õ–æ–±–Ω—è", "–î–º–∏—Ç—Ä–æ–≤", "–î–æ–ª–≥–æ–ø—Ä—É–¥–Ω–∞—è", "–î—É–±–Ω–∞", "–ë–æ–ª—å—à–∞—è –í–æ–ª–≥–∞", "–ë–µ—Å–∫—É–¥–Ω–∏–∫–æ–≤–æ", "–í–æ–¥–Ω–∏–∫–∏", "–ö–∞—Ç—É–∞—Ä"],
    "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π": ["–°–µ—Ä–≥–∏–µ–≤ –ü–æ—Å–∞–¥", "–ü—É—à–∫–∏–Ω–æ", "–ú–æ–Ω–∏–Ω–æ", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤", "–§—Ä—è–∑–∏–Ω–æ", "–ë–æ–ª—à–µ–≤–æ", "–ú—ã—Ç–∏—â–∏"]
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_keyboard = ReplyKeyboardMarkup([['üöÇ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç']], resize_keyboard=True)
back_keyboard = ReplyKeyboardMarkup([['üîô –ù–∞–∑–∞–¥']], resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "üöâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ 'üöÇ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞.",
        reply_markup=main_keyboard
    )

def generate_route(update: Update, context: CallbackContext):
    station = random.choice(list(RAILWAY_STATIONS.keys()))
    direction = random.choice(RAILWAY_STATIONS[station])
    station_number = random.randint(10, 30)
    
    response = (
        f"üöÇ <b>–í–∞—à –≤–æ–∫–∑–∞–ª:</b> {station}\n"
        f"üìç <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> –ú–æ—Å–∫–≤–∞ ‚Äî {direction}\n"
        f"üî¢ <b>–°—Ç–∞–Ω—Ü–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞:</b> {station_number}\n\n"
        f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! üåü"
    )
    
    update.message.reply_text(response, parse_mode='HTML', reply_markup=back_keyboard)

def handle_message(update: Update, context: CallbackContext):
    text = update.message.text
    
    if text == 'üöÇ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç':
        generate_route(update, context)
    elif text == 'üîô –ù–∞–∑–∞–¥':
        update.message.reply_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=main_keyboard
        )
    else:
        update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
            reply_markup=main_keyboard
        )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞–µ–º Updater –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω
    updater = Updater(TOKEN, use_context=True)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()